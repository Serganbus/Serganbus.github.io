<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: мысли | Блог программиста]]></title>
  <link href="http://Serganbus.github.io/blog/categories/mysli/atom.xml" rel="self"/>
  <link href="http://Serganbus.github.io/"/>
  <updated>2014-12-24T17:15:41+06:00</updated>
  <id>http://Serganbus.github.io/</id>
  <author>
    <name><![CDATA[Сергей Иванов]]></name>
    <email><![CDATA[sega234@mail.ru]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Кто такой программист?]]></title>
    <link href="http://Serganbus.github.io/blog/2014/10/11/who-is-programmist/"/>
    <updated>2014-10-11T13:43:09+06:00</updated>
    <id>http://Serganbus.github.io/blog/2014/10/11/who-is-programmist</id>
    <content type="html"><![CDATA[<p>Размышляя над тем, какие навыки больше всего нужны программисту, в уме нарисовалась занимательная пирамида по подобию пирамиды Маслоу, а позже была перенесена в компьютерное изображение:
<img class="center" src="/images/posts/programmer_pyramide.png" width="806" height="402" title="&lsquo;Пирамида программиста&rsquo; &lsquo;Пирамида программиста&rsquo;" ></p>

<!--more-->


<p>Рассмотрим каждый слой подробнее:</p>

<h4>Логика</h4>

<p>Конечно же, самое важное, чем должен обладать программист – это логика. Умение правильно мыслить, выявлять взаимосвязи между явлениями безусловно должны быть атрибутами каждого не столько программиста, сколько толкового технаря.</p>

<h4>Математика</h4>

<p>Если человек обладает логическим мышлением, значит знание математики лишь вопрос времени.
Конечно же, разным специализациям необходимы различные разделы математики, однако, знание математического аппарата на уровне хотя бы школьного курса критически необходимо.</p>

<h4>Формализация</h4>

<p>Перенести любые действия на язык точных наук - дано не каждому. Именно здесь без знания математики, логики, и, возможно, других наук не обойтись. Умение пользоваться декомпозицией сложных задач на более мелкие подзадачи категорически приветствуется.</p>

<h4>Алгоритмы и структуры данных</h4>

<p>Фактически, алгоритмы и структуры данных необходимы для кодирования формализованной модели процесса/объекта/системы.
Строить алгоритмы еще учат в школьном курсе информатики. Там дают понятие термина &ldquo;алгоритм&rdquo;, учат их составлять, даже строят блок-схемы по ним. Но какая это потрясающая вещь, кто-нибудь для себя вынес? А ведь мы с ними сталкиваемся каждый день! Да что уж говорить, нашу жизнь можно описать простым алгоритмом, приводящим неизменно к одному и тому же результату. Рождение-> детство-> юношество-> молодость-> зрелость-> старость-> смерть. Это, наверное, самый надежный алгоритм во вселенной!</p>

<h4>Языки программирования</h4>

<p>Все основные алгоритмы и структуры данных доступны практически(а может и на любом) языке программирования. Здесь уместно сравнение с человеческими языками: их существует огромное множество, однако на каком бы из них ни говорил человек, он сможет выразить все, что угодно! Таким образом, язык программирования является инструментом выражения формализованной модели или алгоритма, следствием выполнения которого является работающая программа.</p>

<h4>Шаблоны проектирования</h4>

<p>Сюда также я хотел бы отнести и различные архитектуры приложений. На каком бы языке вы ни писали, для каждого существует набор типовых решений конкретных задач. Они существенно упрощают жизнь.</p>

<h4>Технологии</h4>

<p>Я расположил это понятие на верхушке своего представления о программировании, потому что технологии являются синтезом всего вышеперечисленного. Например, при раскрытии темы веб-технологии оказывается, что это собирательное понятие использования определенного набора языков программирования(скажем, PHP, Java, JavaScript и т.д.), архитектур приложений(например сервис-ориентированные приложения, клиент-серверные приложения) и определенного набора шаблонов проектирования(допустим, MVC, MVVM).</p>

<h4>И это все?</h4>

<p>Описанная выше пирамида предполагает, что последующий уровень знаний требует некоторые знания из предыдущего.
Поэтому, в это представление не вписываются умения владением системами контроля версий, операционными системами и всякого рода методологиями разработки. Это такие вещи, понимание которых делает жизнь проще и краше всегда.</p>
]]></content>
  </entry>
  
</feed>
